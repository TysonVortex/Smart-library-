Excellent! It's Day 9, and time to build the Admin Panel to manage book requests.


---

✅ Day 9: Admin Request Management Panel (Approve / Reject Requests)


---

🎯 Today’s Goals:

1. Create admin/view_requests.php to show all requests


2. Show student info + book details


3. Allow Admin to Approve or Reject each request


4. Update status in the database




---

🛠 Step 1: Create view_requests.php (in /admin/)

<?php
include '../backend/db.php';

$sql = "SELECT r.request_id, r.student_name, r.student_id, r.status, r.request_date,
               b.title, b.author
        FROM book_requests r
        JOIN book b ON r.book_id = b.book_id
        ORDER BY r.request_date DESC";

$result = $conn->query($sql);
?>

<!DOCTYPE html>
<html>
<head>
  <title>Manage Book Requests</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>
<body class="p-5 bg-light">
<div class="container">
  <h2 class="mb-4">Book Issue Requests</h2>

  <table class="table table-bordered table-striped">
    <thead class="table-dark">
      <tr>
        <th>Request ID</th>
        <th>Student</th>
        <th>Student ID</th>
        <th>Book Title</th>
        <th>Author</th>
        <th>Status</th>
        <th>Date</th>
        <th>Action</th>
      </tr>
    </thead>
    <tbody>
      <?php if ($result->num_rows > 0): ?>
        <?php while($row = $result->fetch_assoc()): ?>
          <tr>
            <td><?= $row['request_id'] ?></td>
            <td><?= htmlspecialchars($row['student_name']) ?></td>
            <td><?= htmlspecialchars($row['student_id']) ?></td>
            <td><?= htmlspecialchars($row['title']) ?></td>
            <td><?= htmlspecialchars($row['author']) ?></td>
            <td>
              <?php
              $status = $row['status'];
              $badgeClass = $status === 'Approved' ? 'success' : ($status === 'Rejected' ? 'danger' : 'warning');
              ?>
              <span class="badge bg-<?= $badgeClass ?>"><?= $status ?></span>
            </td>
            <td><?= $row['request_date'] ?></td>
            <td>
              <?php if ($status === 'Pending'): ?>
                <a href="../backend/handle_request_update.php?id=<?= $row['request_id'] ?>&action=approve" class="btn btn-sm btn-success">Approve</a>
                <a href="../backend/handle_request_update.php?id=<?= $row['request_id'] ?>&action=reject" class="btn btn-sm btn-danger">Reject</a>
              <?php else: ?>
                <em>No action</em>
              <?php endif; ?>
            </td>
          </tr>
        <?php endwhile; ?>
      <?php else: ?>
        <tr><td colspan="8" class="text-center">No book requests found.</td></tr>
      <?php endif; ?>
    </tbody>
  </table>
</div>
</body>
</html>

<?php
$conn->close();
?>


---

⚙️ Step 2: Create handle_request_update.php (in /backend/)

<?php
include 'db.php';

if (isset($_GET['id']) && isset($_GET['action'])) {
    $request_id = $_GET['id'];
    $action = $_GET['action'];

    if ($action === 'approve' || $action === 'reject') {
        $new_status = ucfirst($action); // Approve → Approved

        $stmt = $conn->prepare("UPDATE book_requests SET status = ? WHERE request_id = ?");
        $stmt->bind_param("si", $new_status, $request_id);

        if ($stmt->execute()) {
            header("Location: ../admin/view_requests.php?status=updated");
            exit;
        } else {
            echo "❌ Error updating status: " . $stmt->error;
        }

        $stmt->close();
    } else {
        echo "Invalid action.";
    }
} else {
    echo "Missing parameters.";
}

$conn->close();
?>


---

✅ What You Get:

Admin sees all requests from students

Each request shows:

Student name, ID

Book title & author

Request status

Action buttons if still pending


Admin can approve/reject with one click



---

📦 Deliverables for Day 9:

/admin/view_requests.php: Request management panel

/backend/handle_request_update.php: Status handler (approve/reject)



---

🔜 Coming Up — Day 10: Client “My Requests” Page

Let students see only their own request history and status.

Let me know when you're ready for Day 10, or if you'd like help testing Day 9!

